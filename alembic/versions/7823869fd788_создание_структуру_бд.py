"""создание структуры БД.

Revision ID: 7823869fd788
Revises:
Create Date: 2025-09-15 19:54:24.692986

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7823869fd788"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("coffee_points",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("name", sa.String(length=200), nullable=False),
    sa.Column("address", sa.String(length=500), nullable=False),
    sa.Column("metro_station", sa.String(length=100), nullable=True),
    sa.Column("is_active", sa.Boolean(), nullable=False),
    sa.Column("created_dt", sa.DateTime(), server_default=sa.text("timezone('Europe/Moscow', now())"), nullable=False),
    sa.Column("update_dt", sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_table("drinks",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("name", sa.String(length=200), nullable=False),
    sa.Column("description", sa.String(length=4000), nullable=False),
    sa.Column("created_dt", sa.DateTime(), server_default=sa.text("timezone('Europe/Moscow', now())"), nullable=False),
    sa.Column("update_dt", sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_table("ingredients",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("name", sa.String(length=200), nullable=False),
    sa.Column("description", sa.String(length=2000), nullable=False),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_table("users",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("tg_id", sa.BigInteger(), nullable=True),
    sa.Column("name", sa.String(length=200), nullable=True, comment="имя клиента из отзыва/предложения"),
    sa.Column("phone", sa.String(length=20), nullable=True),
    sa.Column("created_dt", sa.DateTime(), server_default=sa.text("timezone('Europe/Moscow', now())"), nullable=False),
    sa.Column("tg_username", sa.String(length=500), nullable=True, comment="ник пользователя."),
    sa.Column("first_name", sa.String(length=200), nullable=True),
    sa.Column("full_name", sa.String(length=400), nullable=True),
    sa.Column("last_name", sa.String(length=200), nullable=True),
    sa.Column("update_dt", sa.DateTime(), nullable=True),
    sa.Column("been_deleted", sa.Boolean(), nullable=True, comment="True удалил, False | None подписан."),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_table("drink_coffee_point_association",
    sa.Column("drink_id", sa.Integer(), nullable=False),
    sa.Column("coffee_point_id", sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(["coffee_point_id"], ["coffee_points.id"], ),
    sa.ForeignKeyConstraint(["drink_id"], ["drinks.id"], ),
    sa.PrimaryKeyConstraint("drink_id", "coffee_point_id")
    )
    op.create_table("drink_ingredient_association",
    sa.Column("drink_id", sa.Integer(), nullable=False),
    sa.Column("ingredient_id", sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(["drink_id"], ["drinks.id"], ),
    sa.ForeignKeyConstraint(["ingredient_id"], ["ingredients.id"], ),
    sa.PrimaryKeyConstraint("drink_id", "ingredient_id")
    )
    op.create_table("feedback",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("text", sa.String(), nullable=False),
    sa.Column("feedback_type", sa.String(length=100), nullable=False),
    sa.Column("status", sa.String(length=100), nullable=True),
    sa.Column("created_dt", sa.DateTime(), server_default=sa.text("timezone('Europe/Moscow', now())"), nullable=False),
    sa.Column("user_id", sa.Integer(), nullable=False),
    sa.Column("coffee_point_id", sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(["coffee_point_id"], ["coffee_points.id"], ),
    sa.ForeignKeyConstraint(["user_id"], ["users.id"], ),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_table("photos",
    sa.Column("id", sa.Integer(), nullable=False),
    sa.Column("photo_string", sa.String(length=2000), nullable=False),
    sa.Column("ingredient_id", sa.Integer(), nullable=True),
    sa.Column("drink_id", sa.Integer(), nullable=True),
    sa.Column("feedback_id", sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(["drink_id"], ["drinks.id"], ),
    sa.ForeignKeyConstraint(["feedback_id"], ["feedback.id"], ),
    sa.ForeignKeyConstraint(["ingredient_id"], ["ingredients.id"], ),
    sa.PrimaryKeyConstraint("id")
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("photos")
    op.drop_table("feedback")
    op.drop_table("drink_ingredient_association")
    op.drop_table("drink_coffee_point_association")
    op.drop_table("users")
    op.drop_table("ingredients")
    op.drop_table("drinks")
    op.drop_table("coffee_points")
    # ### end Alembic commands ###
