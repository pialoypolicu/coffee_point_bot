from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery

from app.logic.ai_gen_logic import AIGeneratorLogic

ai_router = Router()


@ai_router.callback_query(F.data == "good_wish")
async def ai_gen_wish(callback: CallbackQuery, state: FSMContext, aigen_logic: AIGeneratorLogic) -> None:
    """–†–æ—É—Ç–µ—Ä –∫–æ–ª–±–µ–∫–∞ –∫–Ω–æ–ø–∫–∏ –û—Ç–ª–∏—á–Ω–æ–≥–æ –¥–Ω—è!.

    Args:
        callback: –æ–±—ä–µ–∫—Ç –≤—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å –∫–æ–ª–±–µ–∫–∞ –∫–Ω–æ–ø–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –Ω–∞ inline keyboard
        state: –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–∞–º—è—Ç–∏.
        aigen_logic: –ª–æ–≥–∏–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∫ –ò–ò. –û–±—ä–µ–∫—Ç –ø—Ä–∏–ª–µ—Ç–∞–µ—Ç –∏–∑ AIGenLogicMiddleware.
    """
    await callback.answer("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ–∂–µ–ª–∞–Ω–∏–µ... –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥")
    # –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    await callback.message.edit_text(
        "‚ú® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Å–æ–±–µ–Ω–Ω–æ–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –¥–ª—è —Ç–µ–±—è...",
        reply_markup=None
    )
    try:
        await aigen_logic.gpt_text(callback, state)
    except Exception:
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback.message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!"
        )
        raise
